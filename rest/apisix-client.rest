### Forward port: 
# kill -9 $(lsof -t -i:9080)
# kubectl -n apisix port-forward $(kubectl get pods -l app.kubernetes.io/name=apisix -n apisix -o jsonpath="{.items[0].metadata.name}") 9080:9080

# environment for terminal: CERT_CONTENT_BASE64=$(base64 < rest/client.crt)
# environment for clipboard: base64 < rest/client.crt | pbcopy
@CERT_CONTENT_BASE64 = <clipboard value>


### List topic
GET http://127.0.0.1:9080/topics
Host: example.com
Content-Type: application/json
Source: client
Client-Certificate: {{ CERT_CONTENT_BASE64 }}

### List topic with curl
# CERT_CONTENT_BASE64=$(base64 < rest/client.crt)
curl -i "http://127.0.0.1:9080/topics" \
-H 'Host: example.com' \
-H 'Content-Type: application/vnd.kafka.json.v2+json' \
-H 'Source: client' \
-H "Client-Certificate: $CERT_CONTENT_BASE64"


### Create consumer
POST http://localhost:9080/consumers/strimzi-kafka-consumer-group
Host: example.com
Content-Type: application/vnd.kafka.json.v2+json
Source: client
Client-Certificate: {{ CERT_CONTENT_BASE64 }}

{
   "name": "strimzi-kafka-consumer",
   "auto.offset.reset": "earliest",
   "format": "json",
   "enable.auto.commit": true,
   "fetch.min.bytes": 512,
   "consumer.request.timeout.ms": 30000
}

### Subscribe topic
POST http://localhost:9080/consumers/strimzi-kafka-consumer-group/instances/strimzi-kafka-consumer/subscription
Host: example.com
Content-Type: application/vnd.kafka.json.v2+json
Source: client
Client-Certificate: {{ CERT_CONTENT_BASE64 }}

{
   "topics": ["event"]
}


### Consume message
GET http://localhost:9080/consumers/strimzi-kafka-consumer-group/instances/strimzi-kafka-consumer/records
Host: example.com
Accept: application/vnd.kafka.json.v2+json
Source: client
Client-Certificate: {{ CERT_CONTENT_BASE64 }}
